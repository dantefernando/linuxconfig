#!/bin/sh

# Show wifi 📶 and percent strength or 📡 if none.
# Show 🌐 if connected to ethernet or ❎ if none.
# Show 🔒 if a vpn connection is active
# Show ✅ if a vpn is connected and the qBittorrent $port is OPEN

# !! SET THIS to the port used by qBittorrent !!
PORT=60134

# case $BLOCK_BUTTON in
# 	1) "$TERMINAL" -e nmtui; pkill -RTMIN+4 dwmblocks ;;
# 	3) notify-send "🌐 Internet module" "\- Click to connect
# 📡: no wifi connection
# 📶: wifi connection with quality
# ❎: no ethernet
# 🌐: ethernet working
# 🔒: vpn is active
# " ;;
# 	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
# esac

# Perform a portcheck to see qBittorrent's port is open
portCheck() {
	curl -s https://am.i.mullvad.net/port/$PORT | grep "true" >> /dev/null && local portStatus="✅" || local portStatus="❌"
	echo $portStatus
}


# Get icons and SSID
getNetInfo() {
	# Assign wifi status icons
	case "$(cat /sys/class/net/w*/operstate 2>/dev/null)" in
		down) wifiicon="📡 " ;;
		up) wifiicon="$(awk '/^\s*w/ { print "📶", int($3 * 100 / 70) "% " }' /proc/net/wireless)" ;;
	esac

	# Get wifi network name
	network=$(nmcli | awk '/connected to/{print a $4}')

	# If VPN is active, set vpn var to lock emoji
	vpn=$(sed "s/.*/🔒/" /sys/class/net/tun*/operstate 2>/dev/null)
}


main () {
	getNetInfo

	# if VPN is active and qbittorrent application is running then check if the port is open
	[[ -n $vpn ]] && [[ -n $(pgrep qbittorrent) ]] && portStatus=$(portCheck)


	printf "%s %s%s%s%s\n" "$network" "$wifiicon" "$(sed "s/down/🔴/;s/up/🌐/" /sys/class/net/e*/operstate 2>/dev/null)" $vpn $portStatus
}

main

